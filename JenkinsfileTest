pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'api-image'
        CONTAINER_NAME = 'api-container'
        API_URL = 'http://localhost:8083/activities'
        MAX_RETRIES = 10
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    // Construir la imagen Docker
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Ejecutar el contenedor
                    sh 'docker run -d --name $CONTAINER_NAME -p 8083:8083 $DOCKER_IMAGE'
                }
            }
        }

        stage('Test API') {
            steps {
                script {
                    // Esperar hasta que el API esté disponible
                    def retries = 0
                    def success = false
                    while (retries < MAX_RETRIES) {
                        try {
                            sh "curl -f $API_URL"
                            success = true
                            break
                        } catch (Exception e) {
                            echo "Esperando a que el contenedor esté listo..."
                            retries++
                            sleep 5
                        }
                    }
                    if (!success) {
                        error "El contenedor no respondió después de ${MAX_RETRIES} intentos"
                    }
                }
            }
        }

        stage('Stop and Clean Up') {
            steps {
                script {
                    // Detener el contenedor y limpiar
                    sh 'docker stop $CONTAINER_NAME'
                    sh 'docker rm $CONTAINER_NAME'
                }
            }
        }
    }

    post {
        always {
            // Limpiar imágenes Docker si es necesario
            sh 'docker system prune -f'
        }
    }
}
